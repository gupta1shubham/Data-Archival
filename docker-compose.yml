version: '3'

services:

  # Single PostgreSQL instance to host multiple logical databases
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: primarydb  # Initial database (more will be created on init)
    ports:
      - "5432:5432"
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    networks:
      - microservice-network

  # Kafka for message queue (to decouple services)
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - microservice-network


  # Zookeeper (Required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - microservice-network
  # Kafka UI for monitoring Kafka topics, consumers, and messages
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8088:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - microservice-network

  # Configuration Service
  configuration-service:
    build: ./configuration-service
    container_name: configuration-service
    ports:
      - "8081:8080"
    networks:
      - microservice-network
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=configdb
      - DB_USER=user
      - DB_PASSWORD=password
    depends_on:
      - postgres

  # Scheduler Service
  scheduler-service:
    build: ./scheduler-service
    container_name: scheduler-service
    depends_on:
      - kafka
      - configuration-service
    ports:
      - "8082:8080"
    networks:
      - microservice-network
  # Archival Service
  archival-service:
    build: ./archival-service
    container_name: archival-service
    ports:
      - "8083:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=archivaldb
      - DB_USER=user
      - DB_PASSWORD=password
    depends_on:
      - postgres
      - kafka
    networks:
      - microservice-network
  # Deletion Service
  deletion-service:
    build: ./deletion-service
    container_name: deletion-service
    ports:
      - "8084:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=archivaldb
      - DB_USER=user
      - DB_PASSWORD=password
    depends_on:
      - postgres
      - kafka
    networks:
      - microservice-network
  # Viewer Service
  viewer-service:
    build: ./viewer-service
    container_name: viewer-service
    ports:
      - "8085:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=archivaldb
      - DB_USER=user
      - DB_PASSWORD=password
    depends_on:
      - postgres
      - rbac-service
    networks:
      - microservice-network
  # RBAC & Security Service
  rbac-service:
    build: ./rbac-service
    container_name: rbac-service
    ports:
      - "8086:8080"
    depends_on:
      - postgres
    networks:
      - microservice-network
networks:
  microservice-network:

volumes:
  postgres-data: